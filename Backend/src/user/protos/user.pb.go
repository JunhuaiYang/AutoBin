// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Null struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Null) Reset()         { *m = Null{} }
func (m *Null) String() string { return proto.CompactTextString(m) }
func (*Null) ProtoMessage()    {}
func (*Null) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *Null) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Null.Unmarshal(m, b)
}
func (m *Null) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Null.Marshal(b, m, deterministic)
}
func (m *Null) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Null.Merge(m, src)
}
func (m *Null) XXX_Size() int {
	return xxx_messageInfo_Null.Size(m)
}
func (m *Null) XXX_DiscardUnknown() {
	xxx_messageInfo_Null.DiscardUnknown(m)
}

var xxx_messageInfo_Null proto.InternalMessageInfo

// 用户Id
type UserId struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserId) Reset()         { *m = UserId{} }
func (m *UserId) String() string { return proto.CompactTextString(m) }
func (*UserId) ProtoMessage()    {}
func (*UserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *UserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserId.Unmarshal(m, b)
}
func (m *UserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserId.Marshal(b, m, deterministic)
}
func (m *UserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserId.Merge(m, src)
}
func (m *UserId) XXX_Size() int {
	return xxx_messageInfo_UserId.Size(m)
}
func (m *UserId) XXX_DiscardUnknown() {
	xxx_messageInfo_UserId.DiscardUnknown(m)
}

var xxx_messageInfo_UserId proto.InternalMessageInfo

func (m *UserId) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

// 登录请求
type LoginRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserPassword         string   `protobuf:"bytes,2,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *LoginRequest) GetUserPassword() string {
	if m != nil {
		return m.UserPassword
	}
	return ""
}

// 注册请求
type RegisterRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserPassword         string   `protobuf:"bytes,2,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *RegisterRequest) GetUserPassword() string {
	if m != nil {
		return m.UserPassword
	}
	return ""
}

// 修改用户名或者密码
type UserUpdateRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserPassword         string   `protobuf:"bytes,3,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserUpdateRequest) Reset()         { *m = UserUpdateRequest{} }
func (m *UserUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UserUpdateRequest) ProtoMessage()    {}
func (*UserUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *UserUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserUpdateRequest.Unmarshal(m, b)
}
func (m *UserUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserUpdateRequest.Marshal(b, m, deterministic)
}
func (m *UserUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserUpdateRequest.Merge(m, src)
}
func (m *UserUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UserUpdateRequest.Size(m)
}
func (m *UserUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserUpdateRequest proto.InternalMessageInfo

func (m *UserUpdateRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserUpdateRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserUpdateRequest) GetUserPassword() string {
	if m != nil {
		return m.UserPassword
	}
	return ""
}

// 当前用户垃圾的统计信息响应
type WasteCountReply struct {
	Sum                  int32    `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"`
	Type                 []int32  `protobuf:"varint,2,rep,packed,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WasteCountReply) Reset()         { *m = WasteCountReply{} }
func (m *WasteCountReply) String() string { return proto.CompactTextString(m) }
func (*WasteCountReply) ProtoMessage()    {}
func (*WasteCountReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}

func (m *WasteCountReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WasteCountReply.Unmarshal(m, b)
}
func (m *WasteCountReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WasteCountReply.Marshal(b, m, deterministic)
}
func (m *WasteCountReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WasteCountReply.Merge(m, src)
}
func (m *WasteCountReply) XXX_Size() int {
	return xxx_messageInfo_WasteCountReply.Size(m)
}
func (m *WasteCountReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WasteCountReply.DiscardUnknown(m)
}

var xxx_messageInfo_WasteCountReply proto.InternalMessageInfo

func (m *WasteCountReply) GetSum() int32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *WasteCountReply) GetType() []int32 {
	if m != nil {
		return m.Type
	}
	return nil
}

// 过去一周当前用户垃圾的统计信息响应
type WeekWasteCountReply struct {
	Sum                  int32    `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"`
	Type                 []int32  `protobuf:"varint,2,rep,packed,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeekWasteCountReply) Reset()         { *m = WeekWasteCountReply{} }
func (m *WeekWasteCountReply) String() string { return proto.CompactTextString(m) }
func (*WeekWasteCountReply) ProtoMessage()    {}
func (*WeekWasteCountReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6}
}

func (m *WeekWasteCountReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeekWasteCountReply.Unmarshal(m, b)
}
func (m *WeekWasteCountReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeekWasteCountReply.Marshal(b, m, deterministic)
}
func (m *WeekWasteCountReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeekWasteCountReply.Merge(m, src)
}
func (m *WeekWasteCountReply) XXX_Size() int {
	return xxx_messageInfo_WeekWasteCountReply.Size(m)
}
func (m *WeekWasteCountReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WeekWasteCountReply.DiscardUnknown(m)
}

var xxx_messageInfo_WeekWasteCountReply proto.InternalMessageInfo

func (m *WeekWasteCountReply) GetSum() int32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *WeekWasteCountReply) GetType() []int32 {
	if m != nil {
		return m.Type
	}
	return nil
}

// 查询用户信息响应
type UserInfoReply struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserPassword         string   `protobuf:"bytes,3,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`
	UserScore            int32    `protobuf:"varint,4,opt,name=user_score,json=userScore,proto3" json:"user_score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfoReply) Reset()         { *m = UserInfoReply{} }
func (m *UserInfoReply) String() string { return proto.CompactTextString(m) }
func (*UserInfoReply) ProtoMessage()    {}
func (*UserInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{7}
}

func (m *UserInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfoReply.Unmarshal(m, b)
}
func (m *UserInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfoReply.Marshal(b, m, deterministic)
}
func (m *UserInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfoReply.Merge(m, src)
}
func (m *UserInfoReply) XXX_Size() int {
	return xxx_messageInfo_UserInfoReply.Size(m)
}
func (m *UserInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfoReply proto.InternalMessageInfo

func (m *UserInfoReply) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserInfoReply) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserInfoReply) GetUserPassword() string {
	if m != nil {
		return m.UserPassword
	}
	return ""
}

func (m *UserInfoReply) GetUserScore() int32 {
	if m != nil {
		return m.UserScore
	}
	return 0
}

// 当前用户垃圾的统计信息响应
type UserScore struct {
	Ranking              int32    `protobuf:"varint,1,opt,name=ranking,proto3" json:"ranking,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Score                int32    `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserScore) Reset()         { *m = UserScore{} }
func (m *UserScore) String() string { return proto.CompactTextString(m) }
func (*UserScore) ProtoMessage()    {}
func (*UserScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{8}
}

func (m *UserScore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserScore.Unmarshal(m, b)
}
func (m *UserScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserScore.Marshal(b, m, deterministic)
}
func (m *UserScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserScore.Merge(m, src)
}
func (m *UserScore) XXX_Size() int {
	return xxx_messageInfo_UserScore.Size(m)
}
func (m *UserScore) XXX_DiscardUnknown() {
	xxx_messageInfo_UserScore.DiscardUnknown(m)
}

var xxx_messageInfo_UserScore proto.InternalMessageInfo

func (m *UserScore) GetRanking() int32 {
	if m != nil {
		return m.Ranking
	}
	return 0
}

func (m *UserScore) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserScore) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type UserScoresReply struct {
	UserSum              int32        `protobuf:"varint,1,opt,name=user_sum,json=userSum,proto3" json:"user_sum,omitempty"`
	UserScores           []*UserScore `protobuf:"bytes,2,rep,name=user_scores,json=userScores,proto3" json:"user_scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UserScoresReply) Reset()         { *m = UserScoresReply{} }
func (m *UserScoresReply) String() string { return proto.CompactTextString(m) }
func (*UserScoresReply) ProtoMessage()    {}
func (*UserScoresReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{9}
}

func (m *UserScoresReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserScoresReply.Unmarshal(m, b)
}
func (m *UserScoresReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserScoresReply.Marshal(b, m, deterministic)
}
func (m *UserScoresReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserScoresReply.Merge(m, src)
}
func (m *UserScoresReply) XXX_Size() int {
	return xxx_messageInfo_UserScoresReply.Size(m)
}
func (m *UserScoresReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserScoresReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserScoresReply proto.InternalMessageInfo

func (m *UserScoresReply) GetUserSum() int32 {
	if m != nil {
		return m.UserSum
	}
	return 0
}

func (m *UserScoresReply) GetUserScores() []*UserScore {
	if m != nil {
		return m.UserScores
	}
	return nil
}

// 用户获取个人垃圾桶信息
type BinInfoItem struct {
	BinId                int32    `protobuf:"varint,1,opt,name=bin_id,json=binId,proto3" json:"bin_id,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Angel                float32  `protobuf:"fixed32,3,opt,name=angel,proto3" json:"angel,omitempty"`
	Temp                 float32  `protobuf:"fixed32,4,opt,name=temp,proto3" json:"temp,omitempty"`
	IpAddress            string   `protobuf:"bytes,5,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BinInfoItem) Reset()         { *m = BinInfoItem{} }
func (m *BinInfoItem) String() string { return proto.CompactTextString(m) }
func (*BinInfoItem) ProtoMessage()    {}
func (*BinInfoItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{10}
}

func (m *BinInfoItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinInfoItem.Unmarshal(m, b)
}
func (m *BinInfoItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinInfoItem.Marshal(b, m, deterministic)
}
func (m *BinInfoItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinInfoItem.Merge(m, src)
}
func (m *BinInfoItem) XXX_Size() int {
	return xxx_messageInfo_BinInfoItem.Size(m)
}
func (m *BinInfoItem) XXX_DiscardUnknown() {
	xxx_messageInfo_BinInfoItem.DiscardUnknown(m)
}

var xxx_messageInfo_BinInfoItem proto.InternalMessageInfo

func (m *BinInfoItem) GetBinId() int32 {
	if m != nil {
		return m.BinId
	}
	return 0
}

func (m *BinInfoItem) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *BinInfoItem) GetAngel() float32 {
	if m != nil {
		return m.Angel
	}
	return 0
}

func (m *BinInfoItem) GetTemp() float32 {
	if m != nil {
		return m.Temp
	}
	return 0
}

func (m *BinInfoItem) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

type BinInfoReply struct {
	Sum                  int32          `protobuf:"varint,1,opt,name=sum,proto3" json:"sum,omitempty"`
	BinInfo              []*BinInfoItem `protobuf:"bytes,2,rep,name=bin_info,json=binInfo,proto3" json:"bin_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BinInfoReply) Reset()         { *m = BinInfoReply{} }
func (m *BinInfoReply) String() string { return proto.CompactTextString(m) }
func (*BinInfoReply) ProtoMessage()    {}
func (*BinInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{11}
}

func (m *BinInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinInfoReply.Unmarshal(m, b)
}
func (m *BinInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinInfoReply.Marshal(b, m, deterministic)
}
func (m *BinInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinInfoReply.Merge(m, src)
}
func (m *BinInfoReply) XXX_Size() int {
	return xxx_messageInfo_BinInfoReply.Size(m)
}
func (m *BinInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BinInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_BinInfoReply proto.InternalMessageInfo

func (m *BinInfoReply) GetSum() int32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *BinInfoReply) GetBinInfo() []*BinInfoItem {
	if m != nil {
		return m.BinInfo
	}
	return nil
}

// 获取垃圾桶实时状态
type BinStatusReply struct {
	BinStatus            map[string]int32 `protobuf:"bytes,1,rep,name=bin_status,json=binStatus,proto3" json:"bin_status,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BinStatusReply) Reset()         { *m = BinStatusReply{} }
func (m *BinStatusReply) String() string { return proto.CompactTextString(m) }
func (*BinStatusReply) ProtoMessage()    {}
func (*BinStatusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{12}
}

func (m *BinStatusReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinStatusReply.Unmarshal(m, b)
}
func (m *BinStatusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinStatusReply.Marshal(b, m, deterministic)
}
func (m *BinStatusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinStatusReply.Merge(m, src)
}
func (m *BinStatusReply) XXX_Size() int {
	return xxx_messageInfo_BinStatusReply.Size(m)
}
func (m *BinStatusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BinStatusReply.DiscardUnknown(m)
}

var xxx_messageInfo_BinStatusReply proto.InternalMessageInfo

func (m *BinStatusReply) GetBinStatus() map[string]int32 {
	if m != nil {
		return m.BinStatus
	}
	return nil
}

func init() {
	proto.RegisterType((*Null)(nil), "protos.Null")
	proto.RegisterType((*UserId)(nil), "protos.UserId")
	proto.RegisterType((*LoginRequest)(nil), "protos.LoginRequest")
	proto.RegisterType((*RegisterRequest)(nil), "protos.RegisterRequest")
	proto.RegisterType((*UserUpdateRequest)(nil), "protos.UserUpdateRequest")
	proto.RegisterType((*WasteCountReply)(nil), "protos.WasteCountReply")
	proto.RegisterType((*WeekWasteCountReply)(nil), "protos.WeekWasteCountReply")
	proto.RegisterType((*UserInfoReply)(nil), "protos.UserInfoReply")
	proto.RegisterType((*UserScore)(nil), "protos.UserScore")
	proto.RegisterType((*UserScoresReply)(nil), "protos.UserScoresReply")
	proto.RegisterType((*BinInfoItem)(nil), "protos.BinInfoItem")
	proto.RegisterType((*BinInfoReply)(nil), "protos.BinInfoReply")
	proto.RegisterType((*BinStatusReply)(nil), "protos.BinStatusReply")
	proto.RegisterMapType((map[string]int32)(nil), "protos.BinStatusReply.BinStatusEntry")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 780 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x95, 0xdd, 0x4e, 0xe3, 0x46,
	0x14, 0xc7, 0x65, 0x87, 0x04, 0x72, 0x92, 0x90, 0x32, 0x24, 0xc1, 0x18, 0x5a, 0xd1, 0xa9, 0x2a,
	0xa1, 0x5e, 0x10, 0x89, 0x5e, 0xb4, 0xa2, 0xbd, 0x29, 0x6d, 0x85, 0xa2, 0x45, 0xc0, 0x3a, 0x8b,
	0xe0, 0x2e, 0xeb, 0xe0, 0x21, 0xb2, 0x92, 0x8c, 0xbd, 0x9e, 0x31, 0x28, 0xb7, 0x2b, 0xad, 0xb4,
	0x7b, 0xbd, 0xfb, 0x66, 0xfb, 0x0a, 0xfb, 0x20, 0xab, 0x39, 0x63, 0x27, 0x76, 0x3e, 0x58, 0xb4,
	0x57, 0x99, 0x33, 0x33, 0xe7, 0xe7, 0xff, 0xf9, 0x98, 0x13, 0x80, 0x58, 0xb0, 0xe8, 0x28, 0x8c,
	0x02, 0x19, 0x90, 0x12, 0xfe, 0x08, 0x7b, 0x7f, 0x10, 0x04, 0x83, 0x11, 0x6b, 0xbb, 0xa1, 0xdf,
	0x76, 0x39, 0x0f, 0xa4, 0x2b, 0xfd, 0x80, 0x0b, 0x7d, 0x8b, 0x96, 0x60, 0xed, 0x22, 0x1e, 0x8d,
	0xe8, 0xcf, 0x50, 0xba, 0x16, 0x2c, 0xea, 0x78, 0x64, 0x07, 0xd6, 0x15, 0xa5, 0xe7, 0x7b, 0x96,
	0x71, 0x60, 0x1c, 0x96, 0x9d, 0x52, 0x8c, 0x07, 0xf4, 0x1c, 0xaa, 0xe7, 0xc1, 0xc0, 0xe7, 0x0e,
	0x7b, 0x13, 0x33, 0x21, 0x57, 0x5e, 0x24, 0xbf, 0x40, 0x0d, 0x0f, 0x42, 0x57, 0x88, 0xc7, 0x20,
	0xf2, 0x2c, 0x13, 0x8f, 0xab, 0x6a, 0xf3, 0x2a, 0xd9, 0xa3, 0x5d, 0xa8, 0x3b, 0x6c, 0xe0, 0x0b,
	0xc9, 0xa2, 0x14, 0xb8, 0x07, 0x65, 0xf4, 0xe3, 0xee, 0x98, 0x25, 0xc8, 0x0d, 0xb5, 0x71, 0xe1,
	0x8e, 0xd9, 0xf3, 0xa0, 0x1c, 0xb6, 0x54, 0x14, 0xd7, 0xa1, 0xe7, 0x4a, 0xf6, 0x2c, 0x6c, 0x26,
	0x08, 0xf3, 0xe9, 0x20, 0x0a, 0x4b, 0xbe, 0xf7, 0x07, 0xd4, 0x6f, 0x5c, 0x21, 0xd9, 0xbf, 0x41,
	0xcc, 0xa5, 0xc3, 0xc2, 0xd1, 0x84, 0xfc, 0x00, 0x05, 0x11, 0x8f, 0xf1, 0x3b, 0x45, 0x47, 0x2d,
	0x09, 0x81, 0x35, 0x39, 0x09, 0x99, 0x65, 0x1e, 0x14, 0x0e, 0x8b, 0x0e, 0xae, 0xe9, 0x5f, 0xb0,
	0x7d, 0xc3, 0xd8, 0xf0, 0xfb, 0x9c, 0x3f, 0x18, 0x50, 0xc3, 0x62, 0xf1, 0xfb, 0x40, 0xfb, 0xad,
	0x2c, 0x45, 0x2e, 0x76, 0xf3, 0x5b, 0x29, 0x5d, 0x12, 0x22, 0xf9, 0x51, 0x37, 0x55, 0x4f, 0xdc,
	0x05, 0x11, 0xb3, 0xd6, 0x50, 0x19, 0x32, 0xbb, 0x6a, 0x83, 0xde, 0x42, 0xf9, 0x3a, 0x35, 0x88,
	0x05, 0xeb, 0x91, 0xcb, 0x87, 0x3e, 0x1f, 0x24, 0x21, 0xa4, 0xe6, 0xd3, 0x3a, 0x1a, 0x50, 0xd4,
	0xf4, 0x02, 0x3a, 0x69, 0x83, 0xbe, 0x86, 0xfa, 0x94, 0x2c, 0x74, 0x98, 0xbb, 0xb0, 0xa1, 0xb5,
	0x4c, 0x73, 0x84, 0x61, 0x77, 0xe3, 0x31, 0x39, 0x86, 0xca, 0x4c, 0xa6, 0xc0, 0x74, 0x55, 0x8e,
	0xb7, 0x74, 0x93, 0x8b, 0xa3, 0x29, 0xc8, 0x81, 0xa9, 0x74, 0x41, 0xdf, 0x19, 0x50, 0x39, 0xf5,
	0xb9, 0x4a, 0x63, 0x47, 0xb2, 0x31, 0x69, 0x42, 0xa9, 0xef, 0xf3, 0x34, 0x89, 0x45, 0xa7, 0xd8,
	0xf7, 0x79, 0xc7, 0x23, 0x2d, 0x28, 0x09, 0xe9, 0xca, 0x58, 0xa0, 0xf0, 0xa2, 0x93, 0x58, 0x4a,
	0xb6, 0xcb, 0x07, 0x6c, 0x84, 0xb2, 0x4d, 0x47, 0x1b, 0x58, 0x30, 0x36, 0x0e, 0x31, 0x53, 0xa6,
	0x83, 0x6b, 0x95, 0x43, 0x3f, 0xec, 0xb9, 0x9e, 0x17, 0x31, 0x21, 0xac, 0x22, 0x86, 0x5f, 0xf6,
	0xc3, 0x7f, 0xf4, 0x06, 0xbd, 0x82, 0x6a, 0x22, 0x63, 0x55, 0x17, 0x1c, 0xc1, 0x06, 0x2a, 0xe3,
	0xf7, 0x41, 0x12, 0xda, 0x76, 0x1a, 0x5a, 0x26, 0x00, 0x67, 0xbd, 0xaf, 0x0d, 0xfa, 0xc9, 0x80,
	0xcd, 0x53, 0x9f, 0x77, 0x51, 0xa8, 0x86, 0xfe, 0x07, 0xa0, 0x10, 0x49, 0x24, 0x06, 0x42, 0x7e,
	0xcd, 0x40, 0x32, 0x77, 0x67, 0xe6, 0xff, 0x5c, 0x46, 0x13, 0xa7, 0xdc, 0x4f, 0x6d, 0xfb, 0xef,
	0x0c, 0x17, 0x0f, 0x95, 0xd8, 0x21, 0x9b, 0x24, 0x6d, 0xa7, 0x96, 0x2a, 0x2f, 0x0f, 0xee, 0x28,
	0x66, 0x49, 0xba, 0xb4, 0x71, 0x62, 0xfe, 0x69, 0x1c, 0xbf, 0x2f, 0x41, 0x05, 0x4b, 0xc1, 0xa2,
	0x07, 0xff, 0x8e, 0x91, 0x4b, 0xdd, 0x3c, 0x38, 0x55, 0x48, 0x23, 0x15, 0x93, 0x1d, 0x32, 0x76,
	0x35, 0xdd, 0xc5, 0x29, 0xf5, 0xd3, 0xdb, 0xcf, 0x5f, 0x3e, 0x9a, 0x16, 0xdd, 0x6e, 0xbb, 0xb1,
	0x0c, 0xfa, 0x3e, 0x6f, 0xab, 0x72, 0xb6, 0x47, 0xca, 0xe3, 0xc4, 0xf8, 0x8d, 0xbc, 0x84, 0xaa,
	0x02, 0xa6, 0x83, 0x85, 0xec, 0xa4, 0xde, 0x73, 0xa3, 0xc6, 0xde, 0xcc, 0x76, 0x46, 0xc7, 0xa3,
	0x16, 0x82, 0x09, 0xad, 0xe5, 0xc0, 0x0a, 0x79, 0x09, 0x30, 0x1b, 0x29, 0x64, 0x37, 0xeb, 0x97,
	0x1b, 0x33, 0x73, 0x4a, 0x13, 0xa0, 0xbd, 0x08, 0x7c, 0x01, 0x95, 0x33, 0x26, 0xd3, 0xf7, 0x4b,
	0xe6, 0x94, 0xd8, 0xcd, 0x9c, 0x9d, 0xf6, 0x04, 0x6d, 0x22, 0xaf, 0x4e, 0xf2, 0x3c, 0xf2, 0x0a,
	0x6a, 0x09, 0x4c, 0xf7, 0x34, 0xc9, 0xa9, 0xb0, 0x77, 0x16, 0x1e, 0x80, 0xae, 0x30, 0xdd, 0x47,
	0x5c, 0x8b, 0x34, 0xf2, 0x89, 0xd4, 0xaf, 0x87, 0x38, 0x00, 0xb3, 0xc9, 0xb4, 0xa0, 0x70, 0x0a,
	0x9d, 0x9b, 0x5e, 0x74, 0x0f, 0xa1, 0x4d, 0x32, 0x57, 0x9d, 0x47, 0x75, 0x8d, 0xf4, 0x60, 0x33,
	0x3f, 0xf1, 0x16, 0xb8, 0x7b, 0x53, 0xee, 0xe2, 0x64, 0xa4, 0x07, 0xc8, 0xb6, 0x89, 0x35, 0xc7,
	0x66, 0x6c, 0xd8, 0xd3, 0x1f, 0xb8, 0x85, 0xea, 0x19, 0x93, 0xd3, 0xee, 0x5c, 0xc0, 0xb7, 0x96,
	0x37, 0xfb, 0x2a, 0xf2, 0xec, 0xb1, 0xa8, 0x74, 0x68, 0xf2, 0xd2, 0x82, 0x35, 0xe6, 0x5e, 0xa2,
	0xa6, 0x26, 0x9d, 0x4a, 0x5a, 0x8b, 0x54, 0xf5, 0x8a, 0xfb, 0xfa, 0xdf, 0xf9, 0xf7, 0xaf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x3f, 0x02, 0xc4, 0xed, 0xb2, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	// 用户登录
	UserLogin(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Null, error)
	// 用户注册
	UserRegister(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*UserId, error)
	// 用户信息修改
	UserUpdate(ctx context.Context, in *UserUpdateRequest, opts ...grpc.CallOption) (*Null, error)
	// 用户信息查询(积分)
	GetUserInfo(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*UserInfoReply, error)
	// 所有用户积分查询
	GetUserScores(ctx context.Context, in *Null, opts ...grpc.CallOption) (*UserScoresReply, error)
	//  用户个人垃圾信息统计查询
	WasteCount(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*WasteCountReply, error)
	//  最近一周用户个人垃圾信息统计查询
	WeekWasteCount(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*WeekWasteCountReply, error)
	// 获取实时垃圾桶状态
	GetBinStatus(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*BinStatusReply, error)
	// 获取实时垃圾桶信息
	GetBinInfo(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*BinInfoReply, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) UserLogin(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Null, error) {
	out := new(Null)
	err := c.cc.Invoke(ctx, "/protos.UserService/UserLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UserRegister(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*UserId, error) {
	out := new(UserId)
	err := c.cc.Invoke(ctx, "/protos.UserService/UserRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UserUpdate(ctx context.Context, in *UserUpdateRequest, opts ...grpc.CallOption) (*Null, error) {
	out := new(Null)
	err := c.cc.Invoke(ctx, "/protos.UserService/UserUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserInfo(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*UserInfoReply, error) {
	out := new(UserInfoReply)
	err := c.cc.Invoke(ctx, "/protos.UserService/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserScores(ctx context.Context, in *Null, opts ...grpc.CallOption) (*UserScoresReply, error) {
	out := new(UserScoresReply)
	err := c.cc.Invoke(ctx, "/protos.UserService/GetUserScores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) WasteCount(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*WasteCountReply, error) {
	out := new(WasteCountReply)
	err := c.cc.Invoke(ctx, "/protos.UserService/WasteCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) WeekWasteCount(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*WeekWasteCountReply, error) {
	out := new(WeekWasteCountReply)
	err := c.cc.Invoke(ctx, "/protos.UserService/WeekWasteCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetBinStatus(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*BinStatusReply, error) {
	out := new(BinStatusReply)
	err := c.cc.Invoke(ctx, "/protos.UserService/GetBinStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetBinInfo(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*BinInfoReply, error) {
	out := new(BinInfoReply)
	err := c.cc.Invoke(ctx, "/protos.UserService/GetBinInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	// 用户登录
	UserLogin(context.Context, *LoginRequest) (*Null, error)
	// 用户注册
	UserRegister(context.Context, *RegisterRequest) (*UserId, error)
	// 用户信息修改
	UserUpdate(context.Context, *UserUpdateRequest) (*Null, error)
	// 用户信息查询(积分)
	GetUserInfo(context.Context, *UserId) (*UserInfoReply, error)
	// 所有用户积分查询
	GetUserScores(context.Context, *Null) (*UserScoresReply, error)
	//  用户个人垃圾信息统计查询
	WasteCount(context.Context, *UserId) (*WasteCountReply, error)
	//  最近一周用户个人垃圾信息统计查询
	WeekWasteCount(context.Context, *UserId) (*WeekWasteCountReply, error)
	// 获取实时垃圾桶状态
	GetBinStatus(context.Context, *UserId) (*BinStatusReply, error)
	// 获取实时垃圾桶信息
	GetBinInfo(context.Context, *UserId) (*BinInfoReply, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) UserLogin(ctx context.Context, req *LoginRequest) (*Null, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserLogin not implemented")
}
func (*UnimplementedUserServiceServer) UserRegister(ctx context.Context, req *RegisterRequest) (*UserId, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserRegister not implemented")
}
func (*UnimplementedUserServiceServer) UserUpdate(ctx context.Context, req *UserUpdateRequest) (*Null, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserUpdate not implemented")
}
func (*UnimplementedUserServiceServer) GetUserInfo(ctx context.Context, req *UserId) (*UserInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfo not implemented")
}
func (*UnimplementedUserServiceServer) GetUserScores(ctx context.Context, req *Null) (*UserScoresReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserScores not implemented")
}
func (*UnimplementedUserServiceServer) WasteCount(ctx context.Context, req *UserId) (*WasteCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WasteCount not implemented")
}
func (*UnimplementedUserServiceServer) WeekWasteCount(ctx context.Context, req *UserId) (*WeekWasteCountReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WeekWasteCount not implemented")
}
func (*UnimplementedUserServiceServer) GetBinStatus(ctx context.Context, req *UserId) (*BinStatusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBinStatus not implemented")
}
func (*UnimplementedUserServiceServer) GetBinInfo(ctx context.Context, req *UserId) (*BinInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBinInfo not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_UserLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UserLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.UserService/UserLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UserLogin(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UserRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UserRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.UserService/UserRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UserRegister(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UserUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UserUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.UserService/UserUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UserUpdate(ctx, req.(*UserUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.UserService/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserInfo(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserScores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserScores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.UserService/GetUserScores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserScores(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_WasteCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).WasteCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.UserService/WasteCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).WasteCount(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_WeekWasteCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).WeekWasteCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.UserService/WeekWasteCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).WeekWasteCount(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetBinStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetBinStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.UserService/GetBinStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetBinStatus(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetBinInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetBinInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.UserService/GetBinInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetBinInfo(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UserLogin",
			Handler:    _UserService_UserLogin_Handler,
		},
		{
			MethodName: "UserRegister",
			Handler:    _UserService_UserRegister_Handler,
		},
		{
			MethodName: "UserUpdate",
			Handler:    _UserService_UserUpdate_Handler,
		},
		{
			MethodName: "GetUserInfo",
			Handler:    _UserService_GetUserInfo_Handler,
		},
		{
			MethodName: "GetUserScores",
			Handler:    _UserService_GetUserScores_Handler,
		},
		{
			MethodName: "WasteCount",
			Handler:    _UserService_WasteCount_Handler,
		},
		{
			MethodName: "WeekWasteCount",
			Handler:    _UserService_WeekWasteCount_Handler,
		},
		{
			MethodName: "GetBinStatus",
			Handler:    _UserService_GetBinStatus_Handler,
		},
		{
			MethodName: "GetBinInfo",
			Handler:    _UserService_GetBinInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import waste_pb2 as waste__pb2


class WasteServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.WasteDetect = channel.unary_unary(
        '/protos.WasteService/WasteDetect',
        request_serializer=waste__pb2.WasteRequest.SerializeToString,
        response_deserializer=waste__pb2.WasteReply.FromString,
        )
    self.BinStatus = channel.unary_unary(
        '/protos.WasteService/BinStatus',
        request_serializer=waste__pb2.BinStatusRequest.SerializeToString,
        response_deserializer=waste__pb2.Null.FromString,
        )


class WasteServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def WasteDetect(self, request, context):
    """传输实时图片 返回识别结果
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def BinStatus(self, request, context):
    """antubin状态
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_WasteServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'WasteDetect': grpc.unary_unary_rpc_method_handler(
          servicer.WasteDetect,
          request_deserializer=waste__pb2.WasteRequest.FromString,
          response_serializer=waste__pb2.WasteReply.SerializeToString,
      ),
      'BinStatus': grpc.unary_unary_rpc_method_handler(
          servicer.BinStatus,
          request_deserializer=waste__pb2.BinStatusRequest.FromString,
          response_serializer=waste__pb2.Null.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'protos.WasteService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
